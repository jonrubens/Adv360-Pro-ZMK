/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
               &kp EQUAL          &kp N1              &kp N2       &kp N3            &kp N4  &kp N5           &tog 1                                                                                                  &mo 3  &kp N6        &kp N7      &kp N8              &kp N9         &kp N0                     &kp MINUS
                 &kp TAB           &kp Q               &kp W        &kp F             &kp P   &kp B           &tog 5                                                                                       &kp C_PLAY_PAUSE   &kp J         &kp L       &kp U               &kp Y  &kp SEMICOLON                      &kp BSLH
                 &kp ESC  &hm LEFT_ALT A  &hm LEFT_CONTROL R   &hm LGUI S  &hm LEFT_SHIFT T   &kp G           &kp F6  &kp LS(LA(LC(F9)))  &kp LS(LA(LC(F10)))      &kp LS(LA(LC(F8)))  &kp LS(LA(LC(F7)))     &kp LG(SPACE)   &kp M  &hm LSHIFT N  &hm LGUI E  &hm LEFT_CONTROL I     &hm LALT O                       &kp SQT
               &kp LSHFT           &kp Z               &kp X  &mt LG(C) C       &mt LG(V) D   &kp V                                       &kp LS(LA(LC(F11)))      &kp LS(LA(LC(F6)))                                         &kp K         &kp H   &kp COMMA             &kp DOT       &kp FSLH                     &kp RSHFT
&kp LS(LA(LEFT_CONTROL))       &kp GRAVE          &caps_word     &kp LEFT         &kp RIGHT          &lt 4 BACKSPACE           &lt 1 TAB  &kp LS(LA(LC(F12)))       &kp LC(LS(LA(B)))           &kp ENTER       &lt 2 SPACE                &kp UP    &kp DOWN            &kp LBKT       &kp RBKT  &kp LS(LA(LG(LEFT_CONTROL)))
            >;
        };

        layer_keypad {
            bindings = <
&kp C_SLEEP_MODE  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
          &trans  &trans  &trans  &trans  &trans  &trans   &none                                             &none  &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
          &trans  &trans  &trans  &trans  &trans  &trans   &none  &trans  &trans      &trans     &trans      &none  &trans   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
          &trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                        &trans   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
          &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_symbols {
            bindings = <
&trans           &kp F1         &kp F2                &kp F3                 &kp F4     &kp F5  &tog 1                                       &mo 3      &kp F6        &kp F7           &kp F8  &kp F9  &kp F10  &trans
&trans  &kp EXCLAMATION         &kp AT        &kp LEFT_BRACE        &kp RIGHT_BRACE      &none   &none                                       &none      &trans        &trans           &trans  &trans   &trans  &trans
&trans        &kp CARET     &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &none  &trans  &trans  &trans      &trans  &trans   &none  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &trans   &trans  &trans
&trans      &kp PERCENT  &kp AMPERSAND      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp TILDE                  &trans      &trans                      &trans        &trans           &trans  &trans   &trans  &trans
&trans            &none       &kp HASH         &kp LESS_THAN       &kp GREATER_THAN             &trans  &trans  &trans      &trans  &trans  &trans                    &trans           &trans  &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &none                                                            &trans  &none       &none       &none  &none  &none  &none
&none         &none         &none         &none         &none         &none  &bootloader                                                       &bootloader  &none       &none       &none  &none  &none  &none
&none         &none         &none         &none         &none         &none        &none  &none  &none      &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5  &none       &none       &none  &none  &none  &none
&none         &none         &none         &none         &none         &none                      &none           &none                                      &none       &none       &none  &none  &none  &none
&none         &none         &none         &none         &none                      &none  &none  &none           &none  &bl BL_TOG         &rgb_ug RGB_TOG         &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_nav {
            bindings = <
&none  &none  &none  &none  &none  &none   &none                                       &none     &none          &none        &none      &none  &none  &none
&none  &none  &none  &none  &none  &none   &none                                       &none     &none          &none        &none      &none  &none  &none
&none  &none  &none  &none  &none  &none   &none  &trans  &trans      &trans  &trans   &none  &kp LEFT       &kp DOWN       &kp UP  &kp RIGHT  &none  &none
&none  &none  &none  &none  &none  &none                  &trans       &none                  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP    &kp END  &none  &none
&none  &none  &none  &none  &none         &trans  &trans  &trans      &trans  &trans  &trans                    &none        &none      &none  &none  &none
            >;
        };

        qwerty {
            bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans                  &trans                                        &trans  &trans  &trans     &trans   &trans         &trans  &trans
   &trans   &kp Q   &kp W   &kp E   &kp R   &kp T                  &trans                                        &trans   &kp Y   &kp U      &kp I    &kp O          &kp P  &trans
   &trans   &kp A   &kp S   &kp D   &kp F   &kp G                  &trans    &trans  &trans      &trans  &trans  &trans   &kp H   &kp J      &kp K    &kp L  &kp SEMICOLON  &trans
   &trans   &kp Z   &kp X   &kp C   &kp V   &kp B                                    &trans      &trans                   &kp N   &kp M  &kp COMMA  &kp DOT       &kp FSLH  &trans
&kp LCTRL  &trans  &trans  &trans  &trans          &mt LEFT_GUI BACKSPACE  &kp LALT  &trans      &trans  &trans  &trans          &trans     &trans   &trans         &trans  &trans
            >;
        };
    };
};
