/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: td {
            compatible = "zmk,behavior-tap-dance";
            label = "Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp HOME>, <&caps_word>;
        };

        hml: Homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <7 8 9 9 10 11 12 13 23 24 25 26 27 41 42 43 44 45 55 56 57 58 59 71 72 73 74 75 21 22 39 40 54 70 69>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 15 16 17 18 28 29 30 31 32 46 47 48 49 50 60 61 62 63 64 5 6 19 20 33 34 51 65 66>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <65 70>;
            layers = <0 1>;
        };
    };

    macros {
        nethack_search: nethack_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp N1 &kp N0 &kp D>;
            label = "NETHACK_SEARCH";
        };

        nethack_rest: nethack_rest {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp N1 &kp N0 &kp DOT>;
            label = "NETHACK_REST";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL                 &kp N1           &kp N2        &kp N3        &kp N4       &kp N5  &kp LS(LA(LC(SPACE)))                                                                                     &mo 4             &kp N6  &kp N7            &kp N8              &kp N9        &kp N0                   &kp MINUS
&kp TAB                   &kp Q            &kp W         &kp E         &kp R        &kp T   &none                                                                                                     &kp C_PLAY_PAUSE  &kp Y   &kp U             &kp I               &kp O         &kp P                    &kp BSLH
&kp ESC                   &hml LEFT_ALT A  &hml LCTRL S  &hml LSHFT D  &hml LGUI F  &kp G   &kp F6                 &kp LALT              &td                  &kp LS(LA(LC(F8)))  &kp LS(LA(LC(F7)))  &kp LG(SPACE)     &kp H   &hmr RIGHT_GUI J  &hmr RIGHT_SHIFT K  &hmr LCTRL L  &hmr LEFT_ALT SEMICOLON  &kp SQT
&kp LSHFT                 &kp Z            &kp X         &kp C         &kp V        &kp B                                                &kp PAGE_UP          &tog 1                                                    &kp N   &kp M             &kp COMMA           &kp DOT       &kp FSLH                 &kp RSHFT
&kp LA(LG(LEFT_CONTROL))  &lt 5 GRAVE      &mo 2         &kp LEFT      &kp RIGHT            &mt LGUI BACKSPACE     &mt LEFT_CONTROL DEL  &mt GLOBE PG_DN      &kp F12             &lt 3 ENTER         &kp SPACE                 &kp UP            &kp DOWN            &kp LBKT      &kp RBKT                 &kp LS(LA(LG(LEFT_CONTROL)))
            >;
        };

        homerow_mods_disabled {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans         &trans
&trans  &kp A   &kp S   &kp D   &kp F   &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp J   &kp K   &kp L   &kp SEMICOLON  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans         &trans
            >;
        };

        layer_keypad {
            bindings = <
&kp C_SLEEP_MODE  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans     &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans            &trans  &trans  &trans  &trans  &trans  &trans                                      &trans     &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans     &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans            &trans  &trans  &trans  &trans  &trans                  &trans      &trans                     &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_DIVIDE    &trans
&trans            &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &kp KP_N0          &trans      &trans        &kp KP_DOT     &trans           &trans
            >;
        };

        layer_symbols {
            bindings = <
&trans  &kp F1               &kp F2             &kp F3                            &kp F4                            &kp F5     &tog 2                                                 &mo 4   &kp F6      &kp F7        &kp F8           &kp F9  &kp F10  &trans
&trans  &kp EXCLAMATION      &kp AT             &kp LEFT_BRACE                    &kp RIGHT_BRACE                   &none      &none                                                  &none   &trans      &trans        &trans           &trans  &trans   &trans
&trans  &hml LEFT_ALT CARET  &hml LCTRL DOLLAR  &hml LEFT_SHIFT LEFT_PARENTHESIS  &hml LEFT_META RIGHT_PARENTHESIS  &none      &trans             &trans  &trans      &trans  &trans  &none   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &trans  &trans   &trans
&trans  &kp PERCENT          &kp AMPERSAND      &kp LEFT_BRACKET                  &kp RIGHT_BRACKET                 &kp TILDE                             &trans      &trans                  &trans      &trans        &trans           &trans  &trans   &trans
&trans  &none                &kp HASH           &kp LESS_THAN                     &kp GREATER_THAN                             &kp LA(BACKSPACE)  &trans  &trans      &trans  &trans  &trans              &trans        &trans           &trans  &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_nav {
            bindings = <
&none  &none  &none  &none  &none  &none  &none                                       &none   &none     &none          &none        &none      &none  &none
&none  &none  &none  &none  &none  &none  &none                                       &none   &none     &none          &none        &none      &none  &none
&none  &none  &none  &none  &none  &none  &none   &trans  &trans      &trans  &trans  &none   &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &none  &none
&none  &none  &none  &none  &none  &none                  &trans      &none                   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none  &none
&none  &none  &none  &none  &none         &trans  &trans  &trans      &trans  &trans  &trans            &none          &none        &none      &none  &none
            >;
        };

        game {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                               &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                               &nethack_rest    &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans           &trans  &trans      &trans  &trans  &nethack_search  &trans  &kp N4  &kp N5  &kp N6  &trans  &kp LC(A)
&trans  &trans  &trans  &trans  &trans  &trans                           &trans      &trans                           &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &lt 7 BACKSPACE  &trans  &trans      &trans  &trans  &trans                   &trans  &trans  &trans  &trans  &trans
            >;
        };

        game2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans     &trans   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &kp U   &kp I      &kp O    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp J   &kp K      &kp L    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp M   &kp COMMA  &kp DOT  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans     &trans   &trans  &trans
            >;
        };
    };
};
